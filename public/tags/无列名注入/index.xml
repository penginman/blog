<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>无列名注入 on </title>
    <link>/tags/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</link>
    <description>Recent content in 无列名注入 on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Apr 2021 09:55:17 +0000</lastBuildDate>
    <atom:link href="/tags/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SWPU2019 Web1</title>
      <link>/posts/ctf/swpu2019web1/</link>
      <pubDate>Thu, 15 Apr 2021 09:55:17 +0000</pubDate>
      <guid>/posts/ctf/swpu2019web1/</guid>
      <description>一个登陆界面，再看下url地址为login.php，确认了使用的是php&#xA;直接查看源码，在源码中找到了register.php。先注册一个进去看一看。&#xA;是一个发布广告的信息页，发布广告时需要输入广告的标题和内容，联想一下之前做过的发布文章的，应该是sql注入，输入广告标题输入一个单引号&#39;试一试&#xA;广告详情中出现了数据库报错&#xA;猜测应该是二次注入，发布时加上一些转义字符没有出现错误，但是查看详情时再次从数据库中取出带有payload的数据，可以执行sql语句。而且上面的单引号测试出来了是字符型单引号闭合。&#xA;接下来是尝试过滤。我试出来的有空格（使用/**/绕过）、or，and（可以使用&amp;amp;&amp;amp;，||），同时or被过滤，就说明保存数据库表名的库information_schema没有办法查询，并且orderby也不能使用，需要使用其他办法获取表内容。&#xA;测试一下当前表的字段数，从1开始加，一直会报字段数不匹配，直到尝试到22。还需要主义的是执行的sql语句后面的 LIMIT 0,1需要闭合，所以最后添加了一个单引号&#xA;&amp;#39;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39; 说明回显位是2和3。&#xA;由于没有办法查询表名，所以需要我们自己猜测，CTF比赛中常见的表名就是flag、users、举办方的缩写啥的。这种没有办法查询表名的题目表名应该都不会设置太难&#xA;测试的语句&#xA;&amp;#39;/**/union/**/select/**/1,(select/**/*/**/from/**/flag),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39; 当测到users表时返回了当前字段数不匹配的错误，说名users里有多个字段，肯定没有办法显示在一列中。所以接下来是猜users表的字段数。&#xA;首先讲解一波无列名注入。&#xA;先来个正常表（flag）的查询&#xA;我们知道在sql语句查询的时候，可以给列名起别名形如&#xA;使用联合查询的时候，只要前后表的字段数相同，前面查询的就会成为表名&#xA;所以当我们不知道flag表的字段，并且想要查询里面的内容时，比如我想查询flag表的flag字段，可以构造&#xA;需要为子查询的结果再起一个别名（图中为x），这样我们就不用列名查询到了字段。总结一下思路就是：自己构造一个表名并且联合查询想要查询的表名，再使用group_concat函数输出自己构造的表名。&#xA;所以测试users表的字段数时，就通过形如上图的格式，改变联合查询的字段数判断。&#xA;最终的payload：&#xA;&amp;#39;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39; </description>
    </item>
  </channel>
</rss>
